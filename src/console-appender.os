//////////////////////////////////////////////////////////////////////////
//
// LOGOS: вывод в консоль
//
//////////////////////////////////////////////////////////////////////////

Перем КартаСтатусовИУровней;
Перем ФорматВывода;
Перем JSONРаскладкаСообщения;

Процедура ВывестиСобытие(Знач СобытиеЛога) Экспорт
	Сообщение = СобытиеЛога.ПолучитьФорматированноеСообщение();
	УровеньСообщения = СобытиеЛога.ПолучитьУровень();

	Если ФорматВывода = "text" Тогда
		
		Сообщить(Сообщение, КартаСтатусовИУровней[УровеньСообщения]);
	
	ИначеЕсли ФорматВывода = "json" Тогда

		ИнициироватьJSONРаскладку();

		JSONСообщение = JSONРаскладкаСообщения.ПолучитьФорматированноеСообщение(СобытиеЛога);

		Сообщить(JSONСообщение, КартаСтатусовИУровней[УровеньСообщения]);

	Иначе
	
		Сообщить(Сообщение, КартаСтатусовИУровней[УровеньСообщения]);
	
	КонецЕсли;

КонецПроцедуры

Процедура Закрыть() Экспорт
	JSONРаскладкаСообщения = Неопределено;
КонецПроцедуры

Процедура УстановитьФорматВывода(Знач ИмяФормата) Экспорт
	
	Если НРег(ИмяФормата) = "json" Тогда
		
		ФорматВывода = "json";

	Иначе

		ФорматВывода = "text";

	КонецЕсли;

КонецПроцедуры

Процедура ИнициироватьJSONРаскладку()
	
	Если JSONРаскладкаСообщения = Неопределено Тогда
		
		JSONРаскладкаСообщения = Новый JSONРаскладкаСообщения;

	КонецЕсли;

КонецПроцедуры


// Устанавливает свойство аппендера, заданное в конфигурационном файле
//
Процедура УстановитьСвойство(Знач ИмяСвойства, Знач Значение) Экспорт
	
	Если НРег(ИмяСвойства) = "format" Тогда
		УстановитьФорматВывода(Значение);
	КонецЕсли;

КонецПроцедуры // УстановитьСвойство()

КартаСтатусовИУровней = Новый Соответствие;
КартаСтатусовИУровней.Вставить(УровниЛога.Отладка, СтатусСообщения.БезСтатуса);
КартаСтатусовИУровней.Вставить(УровниЛога.Информация, СтатусСообщения.Обычное);
КартаСтатусовИУровней.Вставить(УровниЛога.Предупреждение, СтатусСообщения.Внимание);
КартаСтатусовИУровней.Вставить(УровниЛога.Ошибка, СтатусСообщения.Важное);
КартаСтатусовИУровней.Вставить(УровниЛога.КритичнаяОшибка, СтатусСообщения.ОченьВажное);
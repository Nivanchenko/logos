//////////////////////////////////////////////////////////////////////////
//
// LOGOS: вывод в файл
//
//////////////////////////////////////////////////////////////////////////

Перем мФайлЛога;
Перем ФорматВывода;
Перем JSONРаскладкаСообщения;

Процедура ОткрытьФайл(Знач Путь, Знач Кодировка = "utf-8", Знач Добавлять = Истина) Экспорт
	мФайлЛога = Новый ЗаписьТекста(Путь, Кодировка,,Добавлять);
КонецПроцедуры

Процедура ВывестиСобытие(Знач СобытиеЛога) Экспорт
	
	ПроверитьИнициализацию();

	Если ФорматВывода = "json" Тогда

		ИнициироватьJSONРаскладку();

		JSONСообщение = JSONРаскладкаСообщения.ПолучитьФорматированноеСообщение(СобытиеЛога);

		мФайлЛога.ЗаписатьСтроку(JSONСообщение);

	Иначе
	
		Сообщение = СобытиеЛога.ПолучитьФорматированноеСообщение();
		мФайлЛога.ЗаписатьСтроку(Сообщение);

	КонецЕсли;
	
КонецПроцедуры

Процедура Закрыть() Экспорт
	ПроверитьИнициализацию();
	мФайлЛога.Закрыть();
	мФайлЛога = Неопределено;
КонецПроцедуры

Процедура УстановитьФорматВывода(Знач ИмяФормата) Экспорт
	
	Если НРег(ИмяФормата) = "json" Тогда
		
		ФорматВывода = "json";

	Иначе

		ФорматВывода = "text";

	КонецЕсли;

КонецПроцедуры

// Устанавливает свойство аппендера, заданное в конфигурационном файле
//
Процедура УстановитьСвойство(Знач ИмяСвойства, Знач Значение) Экспорт
	Если ИмяСвойства = "file" Тогда
		ОткрытьФайл(Значение);

	ИначеЕсли НРег(ИмяСвойства) = "format" Тогда
		УстановитьФорматВывода(Значение);
	КонецЕсли;

КонецПроцедуры // УстановитьСвойство()

Процедура ИнициироватьJSONРаскладку()
	
	Если JSONРаскладкаСообщения = Неопределено Тогда
		
		JSONРаскладкаСообщения = Новый JSONРаскладкаСообщения;

	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьИнициализацию()
	Если мФайлЛога = Неопределено Тогда
		ВызватьИсключение "Не открыт файл лога";
	КонецЕсли;
КонецПроцедуры

ФорматВывода = "text";
